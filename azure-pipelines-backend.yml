trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

steps:
# --- Install Node ---
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node'

# --- Backend dependencies ---
- script: |
    cd backend
    npm install
  displayName: 'Install backend dependencies'

# --- Frontend dependencies & build ---
- script: |
    cd frontend
    npm install
    npm run build
  displayName: 'Build React frontend'

# --- Copy frontend build into backend ---
- script: |
    cp -r frontend/build backend/build
  displayName: 'Copy frontend build to backend folder'

# --- Archive backend + frontend ---
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'backend'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true
  displayName: 'Zip backend + frontend'

# --- Publish artifact (optional) ---
- publish: '$(Build.ArtifactStagingDirectory)/app.zip'
  artifact: drop

# --- Deploy to Azure Web App ---
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Azure-SC'   # Your DevOps service connection
    appName: 'ecomwebapp'           # Azure App Service name
    package: '$(Build.ArtifactStagingDirectory)/app.zip'
    deploymentMethod: 'zipDeploy'
  displayName: 'Deploy backend + frontend to Azure Web App'
